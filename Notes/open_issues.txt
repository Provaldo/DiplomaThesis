21) Πρέπει τα κουμπιά createRMQserver / deleteRMQserver να γκριζάρονται και να μη λειτουργούν μέχρι να ολοκληρωθεί η διαδικασία δημιουργίας / διαγραφής του server και των services.

19) Όταν κρασάρει το backend ενώ έχω κάνει login στο frontend, όταν ξανασηκώνω το backend, στο frontend φαίνομαι συνδεδεμένος δλδ στο Navbar υπάρχει μόνο το κουμπί Logout.

18) Αν έχω χρόνο να εφαρμόσω ότι μπορώ και έχει νόημα από το παρακάτω βίντεο για security: https://www.youtube.com/watch?v=wqsUfvRyYpw

17) Τα δεδομένα που θα αποθηκεύονται στη ΒΔ πρέπει να είναι κρυπτογραφημένα. Επίσης οι DB Admin/Moderators δεν πρέπει να έχουν read access στα δεδομένα των χρηστών.

15) Όταν λήγει ένα cookie, στο επόμενο request που θα κάνει ο χρήστης, θα πρέπει να γίνει logged out. Αυτό αυτή τη στιγμή το υλοποίησα στο αρχείο errorReducer.js του frontend. Αυτό μου φαίνεται ότι δεν είναι καλή λύση γιατί θέλουμε να μην έχουμε κώδικα λογικής μέσα στον reducer. Επίσης δεν έχω δοκιμάσει ότι λειτουργεί αυτή ή έστω προσωρινή λύση ΟΠΟΤΕ ΜΠΟΡΕΙ ΝΑ ΚΡΑΣΑΡΕΙ ΤΟ FRONTEND ΣΕ ΚΑΠΟΙΑ ΦΑΣΗ ΓΙΑ ΑΥΤΟ ΤΟ ΛΟΓΟ.

14) *** PARTIALLY FIXED *** Όταν γίνεται επιτυχώς logged in ένας user, οδηγείται στο view AuthenticatedContent /authenticated. Εάν προσπαθήσει να γράψει όμως στο URL localhost/authenticated αυτό δε λειτουργεί. Να το φτιάξω.
- Πρόσθεσα μια εντολή στο nginx configuration file. Τώρα λειτουργούν τα routes /register, /login αλλά στο /authenticated μου πετάει κάποια errors.

13) Στην περίπτωση που το backend ειναι offline τότε και το frontend δε δειχνει τίποτα. Να το διορθώσω, τουλάχιστον να δείχνει ένα error message. Γενικά δλδ να προσθέσω error handling για τις περιπτώσεις που δεν επιτυγχάνεται η σύνδεση με τη ΒΔ από το backend, όταν δεν επιτυγχάνεται η σύνδεση με το backend από το frontend, όταν το backend αποτυγχάνει να δημιουργήσει consumers ή rabbitmq servers κλπ.

12) Έκανα npm install amqplib στον φάκελο του express-backend ώστε να πειραματιστώ με ττη δημιουργία producers/consumers κατευθείαν από το backend. Όταν τελειώσω με τα πειράματα και αν μετακινήσω τη λειτουργικότητα σε άλλο μέρος να κάνω uninstall το amqplib από το backend.

11) Καλό θα ήταν να προσαρμόσω το Redux του frontend με βάση το πρότυπο Ducks όπως το έχει εδώ: https://www.youtube.com/watch?v=wcXTCG8zMhY&list=PLQg6GaokU5CyvExiaMgXP_BS5WWNBfZJN&index=13

10) Να φτιάξω το frontend καλύτερα έτσι ώστε αν ο χρήστης βάζει κάποιο άκυρο URL να του εμφανίζεται κατάλληλο μήνυμα. Τώρα του εμφανίζει το Navbar και κενό από κάτω.

9) Να δοκιμάσω την καινούρια συνάρτηση signout του backend που βρήκα και την έχω τώρα commented out

8) Να τσεκάρω τι παίζει με το VerifySignIn και VerifySignUp του backend μου και γιατι τα κάνω export και import διαφορετικά

7) Να τσεκάρω αν χρειάζεται όλο το state.auth object στο Register component. Νομίζω χρειάζεται μόνο το state.auth.isAuthenticated. Αν ισχύει αυτό να κρατήσω μονο το τελευταίο.

6) Να τσεκάρω αν χρειάζεται να στέλνω και το id του user σαν απάντηση απ το backend όταν γίνεται το login. Αν δε χρειάζεται να μην το στέλνω.

3) Να μάθω τι είναι το bootstrap

2) Το κουμπί Logout στο Navbar έχει διαφορετικό χρώμα απ το υπόλοιπο Navbar και δεν έχω βρει το attribute που πρέπει να πειράξω για να το διορθώσω.

##############################################################################

4) *** Kinda learned *** Να μάθω τι είναι τα classnames και που τα βρίσκει κανείς τα ονόματα και τι κάνουν.

20) *** FIXED (Ο χρήστης ορίζει explicitly τα credentials)*** Πρέπει να βρω τρόπο να δίνω στον rabbitmw server του κάθε χρήστη, το password του ώστε να έχει πρόσβαση στο management ui με τα credentials του ο χρήστης.

16) *** TOLERATED *** Τα μηνύματα που στέλνει το backend μου φάινεται ότι είναι πολύ συγκεκριμένα σε κάποιες περιπτώσεις (όπως όταν δεν υπάρχει ενεργό session: "No valid session exists!"). Η δουλειά του backend δεν είναι να προσφέρει μηνύματα έτοιμα προς παρουσίαση στον χρήστη. Αυτό θα έπρεπε να γίνεται στο frontend. Το backend θα έπρεπε να προσφέρει απλά την πληροφορία με όσο το δυνατόν συντομότερο και ακριβέστερο τρόπο.

5) *FIXED* Όταν χτυπάω το link /authenticated πρώτα φορτώνει το component AutnenticatedContent και σε ελάχιστο χρόνο πηγαίνει στο Login. Δε θα έπρεπε να φορτώνει καθόλου το Authenticated Content.

1) *FIXED* Στη σελίδα "Register", εάν προκύψουν errors κατά τη συμπλήρωση της φόρμας τότε αυτά παραμένουν. Έτσι αν ο χρήστης εγγραφεί επιτυχώς και κάνει μετά και Login επιτυχώς, αν κάνει Logout και ξαναβρεθεί στη σελίδα Register, τότε ενώ όλα τα πεδία της φόρμας θα είναι κενά, θα εμφανίζονται ακόμα τα ίδια errors από πριν.

